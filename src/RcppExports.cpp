// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// logh
double logh(double u, int m, DoubleVector y, DoubleVector eta, double lambda, double sigma);
RcppExport SEXP _ilsfa_logh(SEXP uSEXP, SEXP mSEXP, SEXP ySEXP, SEXP etaSEXP, SEXP lambdaSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(logh(u, m, y, eta, lambda, sigma));
    return rcpp_result_gen;
END_RCPP
}
// getEffectsHN
DoubleVector getEffectsHN(double lnlambda, double lnsigma, Rcpp::List list_eta, Rcpp::List list_y, int niter, DoubleVector uinit);
RcppExport SEXP _ilsfa_getEffectsHN(SEXP lnlambdaSEXP, SEXP lnsigmaSEXP, SEXP list_etaSEXP, SEXP list_ySEXP, SEXP niterSEXP, SEXP uinitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lnlambda(lnlambdaSEXP);
    Rcpp::traits::input_parameter< double >::type lnsigma(lnsigmaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_y(list_ySEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type uinit(uinitSEXP);
    rcpp_result_gen = Rcpp::wrap(getEffectsHN(lnlambda, lnsigma, list_eta, list_y, niter, uinit));
    return rcpp_result_gen;
END_RCPP
}
// likHN
double likHN(double lnlambda, double lnsigma, Rcpp::List list_eta, Rcpp::List list_y, int niter, DoubleVector uinit, DoubleVector ws, DoubleVector z);
RcppExport SEXP _ilsfa_likHN(SEXP lnlambdaSEXP, SEXP lnsigmaSEXP, SEXP list_etaSEXP, SEXP list_ySEXP, SEXP niterSEXP, SEXP uinitSEXP, SEXP wsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lnlambda(lnlambdaSEXP);
    Rcpp::traits::input_parameter< double >::type lnsigma(lnsigmaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_y(list_ySEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type uinit(uinitSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type ws(wsSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(likHN(lnlambda, lnsigma, list_eta, list_y, niter, uinit, ws, z));
    return rcpp_result_gen;
END_RCPP
}
// logf
double logf(double u, int m, DoubleVector y, DoubleVector eta, double sigmav, DoubleVector sigmau);
RcppExport SEXP _ilsfa_logf(SEXP uSEXP, SEXP mSEXP, SEXP ySEXP, SEXP etaSEXP, SEXP sigmavSEXP, SEXP sigmauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type sigmav(sigmavSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type sigmau(sigmauSEXP);
    rcpp_result_gen = Rcpp::wrap(logf(u, m, y, eta, sigmav, sigmau));
    return rcpp_result_gen;
END_RCPP
}
// likEHET
double likEHET(DoubleVector gamma, double lnsigmav, Rcpp::List list_eta, Rcpp::List list_y, Rcpp::List list_z, int niter, DoubleVector uinit, DoubleVector ws, DoubleVector z);
RcppExport SEXP _ilsfa_likEHET(SEXP gammaSEXP, SEXP lnsigmavSEXP, SEXP list_etaSEXP, SEXP list_ySEXP, SEXP list_zSEXP, SEXP niterSEXP, SEXP uinitSEXP, SEXP wsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DoubleVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type lnsigmav(lnsigmavSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_y(list_ySEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_z(list_zSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type uinit(uinitSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type ws(wsSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(likEHET(gamma, lnsigmav, list_eta, list_y, list_z, niter, uinit, ws, z));
    return rcpp_result_gen;
END_RCPP
}
// getEffectsEHET
DoubleVector getEffectsEHET(DoubleVector gamma, double lnsigmav, Rcpp::List list_eta, Rcpp::List list_y, Rcpp::List list_z, int niter, DoubleVector uinit);
RcppExport SEXP _ilsfa_getEffectsEHET(SEXP gammaSEXP, SEXP lnsigmavSEXP, SEXP list_etaSEXP, SEXP list_ySEXP, SEXP list_zSEXP, SEXP niterSEXP, SEXP uinitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DoubleVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type lnsigmav(lnsigmavSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_y(list_ySEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_z(list_zSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type uinit(uinitSEXP);
    rcpp_result_gen = Rcpp::wrap(getEffectsEHET(gamma, lnsigmav, list_eta, list_y, list_z, niter, uinit));
    return rcpp_result_gen;
END_RCPP
}
// dnormgam
double dnormgam(double y, double mu, double sigma, double alpha, double lambda);
RcppExport SEXP _ilsfa_dnormgam(SEXP ySEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP alphaSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(dnormgam(y, mu, sigma, alpha, lambda));
    return rcpp_result_gen;
END_RCPP
}
// Ii12
DoubleVector Ii12(double y, double mu, double sigma, double alpha, double lambda);
RcppExport SEXP _ilsfa_Ii12(SEXP ySEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP alphaSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(Ii12(y, mu, sigma, alpha, lambda));
    return rcpp_result_gen;
END_RCPP
}
// Euy
double Euy(double y, double mu, double sigma, double alpha, double lambda, double logden);
RcppExport SEXP _ilsfa_Euy(SEXP ySEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP alphaSEXP, SEXP lambdaSEXP, SEXP logdenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type logden(logdenSEXP);
    rcpp_result_gen = Rcpp::wrap(Euy(y, mu, sigma, alpha, lambda, logden));
    return rcpp_result_gen;
END_RCPP
}
// logh_G
double logh_G(double u, int m, DoubleVector y, DoubleVector eta, double sigma, double alpha, double lambda);
RcppExport SEXP _ilsfa_logh_G(SEXP uSEXP, SEXP mSEXP, SEXP ySEXP, SEXP etaSEXP, SEXP sigmaSEXP, SEXP alphaSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(logh_G(u, m, y, eta, sigma, alpha, lambda));
    return rcpp_result_gen;
END_RCPP
}
// Euyall
DoubleVector Euyall(double sigma, double alpha, double lambda, Rcpp::List list_eta, Rcpp::List list_y, DoubleVector alphavec);
RcppExport SEXP _ilsfa_Euyall(SEXP sigmaSEXP, SEXP alphaSEXP, SEXP lambdaSEXP, SEXP list_etaSEXP, SEXP list_ySEXP, SEXP alphavecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_y(list_ySEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type alphavec(alphavecSEXP);
    rcpp_result_gen = Rcpp::wrap(Euyall(sigma, alpha, lambda, list_eta, list_y, alphavec));
    return rcpp_result_gen;
END_RCPP
}
// logHess
double logHess(double u, int m, DoubleVector y, DoubleVector eta, double sigma, double alpha, double lambda);
RcppExport SEXP _ilsfa_logHess(SEXP uSEXP, SEXP mSEXP, SEXP ySEXP, SEXP etaSEXP, SEXP sigmaSEXP, SEXP alphaSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(logHess(u, m, y, eta, sigma, alpha, lambda));
    return rcpp_result_gen;
END_RCPP
}
// getEffectsG
DoubleVector getEffectsG(double lnsigma, double lnalpha, double lnlambda, Rcpp::List list_eta, Rcpp::List list_y, int niter, DoubleVector uinit);
RcppExport SEXP _ilsfa_getEffectsG(SEXP lnsigmaSEXP, SEXP lnalphaSEXP, SEXP lnlambdaSEXP, SEXP list_etaSEXP, SEXP list_ySEXP, SEXP niterSEXP, SEXP uinitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lnsigma(lnsigmaSEXP);
    Rcpp::traits::input_parameter< double >::type lnalpha(lnalphaSEXP);
    Rcpp::traits::input_parameter< double >::type lnlambda(lnlambdaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_y(list_ySEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type uinit(uinitSEXP);
    rcpp_result_gen = Rcpp::wrap(getEffectsG(lnsigma, lnalpha, lnlambda, list_eta, list_y, niter, uinit));
    return rcpp_result_gen;
END_RCPP
}
// minlogh
double minlogh(double u, int m, DoubleVector y, DoubleVector eta, double sigma, double alpha, double lambda);
RcppExport SEXP _ilsfa_minlogh(SEXP uSEXP, SEXP mSEXP, SEXP ySEXP, SEXP etaSEXP, SEXP sigmaSEXP, SEXP alphaSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(minlogh(u, m, y, eta, sigma, alpha, lambda));
    return rcpp_result_gen;
END_RCPP
}
// getEffectsGS
DoubleVector getEffectsGS(double lnsigma, double lnalpha, double lnlambda, Rcpp::List list_eta, Rcpp::List list_y, DoubleVector ulow, DoubleVector uup, double eps);
RcppExport SEXP _ilsfa_getEffectsGS(SEXP lnsigmaSEXP, SEXP lnalphaSEXP, SEXP lnlambdaSEXP, SEXP list_etaSEXP, SEXP list_ySEXP, SEXP ulowSEXP, SEXP uupSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lnsigma(lnsigmaSEXP);
    Rcpp::traits::input_parameter< double >::type lnalpha(lnalphaSEXP);
    Rcpp::traits::input_parameter< double >::type lnlambda(lnlambdaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_y(list_ySEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type ulow(ulowSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type uup(uupSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(getEffectsGS(lnsigma, lnalpha, lnlambda, list_eta, list_y, ulow, uup, eps));
    return rcpp_result_gen;
END_RCPP
}
// likG
double likG(double lnsigma, double lnalpha, double lnlambda, Rcpp::List list_eta, Rcpp::List list_y, DoubleVector ulow, DoubleVector uup, double eps, DoubleVector ws, DoubleVector z, int niter, DoubleVector uinit, int method);
RcppExport SEXP _ilsfa_likG(SEXP lnsigmaSEXP, SEXP lnalphaSEXP, SEXP lnlambdaSEXP, SEXP list_etaSEXP, SEXP list_ySEXP, SEXP ulowSEXP, SEXP uupSEXP, SEXP epsSEXP, SEXP wsSEXP, SEXP zSEXP, SEXP niterSEXP, SEXP uinitSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lnsigma(lnsigmaSEXP);
    Rcpp::traits::input_parameter< double >::type lnalpha(lnalphaSEXP);
    Rcpp::traits::input_parameter< double >::type lnlambda(lnlambdaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_y(list_ySEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type ulow(ulowSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type uup(uupSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type ws(wsSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type uinit(uinitSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(likG(lnsigma, lnalpha, lnlambda, list_eta, list_y, ulow, uup, eps, ws, z, niter, uinit, method));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ilsfa_logh", (DL_FUNC) &_ilsfa_logh, 6},
    {"_ilsfa_getEffectsHN", (DL_FUNC) &_ilsfa_getEffectsHN, 6},
    {"_ilsfa_likHN", (DL_FUNC) &_ilsfa_likHN, 8},
    {"_ilsfa_logf", (DL_FUNC) &_ilsfa_logf, 6},
    {"_ilsfa_likEHET", (DL_FUNC) &_ilsfa_likEHET, 9},
    {"_ilsfa_getEffectsEHET", (DL_FUNC) &_ilsfa_getEffectsEHET, 7},
    {"_ilsfa_dnormgam", (DL_FUNC) &_ilsfa_dnormgam, 5},
    {"_ilsfa_Ii12", (DL_FUNC) &_ilsfa_Ii12, 5},
    {"_ilsfa_Euy", (DL_FUNC) &_ilsfa_Euy, 6},
    {"_ilsfa_logh_G", (DL_FUNC) &_ilsfa_logh_G, 7},
    {"_ilsfa_Euyall", (DL_FUNC) &_ilsfa_Euyall, 6},
    {"_ilsfa_logHess", (DL_FUNC) &_ilsfa_logHess, 7},
    {"_ilsfa_getEffectsG", (DL_FUNC) &_ilsfa_getEffectsG, 7},
    {"_ilsfa_minlogh", (DL_FUNC) &_ilsfa_minlogh, 7},
    {"_ilsfa_getEffectsGS", (DL_FUNC) &_ilsfa_getEffectsGS, 8},
    {"_ilsfa_likG", (DL_FUNC) &_ilsfa_likG, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_ilsfa(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
